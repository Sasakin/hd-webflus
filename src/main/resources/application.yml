spring:
  data:
    mongodb:
      host: localhost
      port: 27017
      database: admin
      username: admin
      password: password
  kafka:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      bootstrap-servers: localhost:9093
      group-id: dh-webflux
      enable-auto-commit: true
      isolation-level: read_committed
      auto-offset-reset: earliest
      properties:
        spring:
          deserializer:
            value:
              delegate:
                class: com.charot.dhwebflux.actuator.metrics.kafka.AuthEventDeserializer
      security:
        protocol: PLAINTEXT
      listener:
        concurrency: 1
    producer:
      bootstrap-servers: localhost:9093
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      security:
        protocol: PLAINTEXT

application:
  kafka:
    auth:
      topic: auth-events

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true

  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  health:
    defaults:
      enabled: true

logging:
  level:
    org:
      springframework:
        data:
          mongodb:
            core:
              MongoTemplate: DEBUG
    ROOT: INFO